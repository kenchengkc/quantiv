# Compose V2: removed version key (was '3.8')

services:
  # FastAPI Backend
  api:
    networks:
      - quantiv-net
    build:
      context: ../../apps/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../../config/.env.local
    environment:
      - DATABASE_URL=
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=quantiv_user
      - POSTGRES_PASSWORD=quantiv_secure_2024
      - POSTGRES_DB=quantiv_options
      - DATA_DIR=/app/data
      - PARQUET_ROOT=/app/data/parquet
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
      - ENVIRONMENT=development
      - DATA_BACKEND=hybrid
      - DATA_DIR=/app/data
      - DUCKDB_PATH=/app/quantiv.duckdb
    depends_on:
      - postgres
      - redis
    volumes:
      - ../../data:/app/data
      - ../../models:/app/models
      - ../../quantiv.duckdb:/app/quantiv.duckdb
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    networks:
      - quantiv-net
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=quantiv_user
      - POSTGRES_PASSWORD=quantiv_secure_2024
      - POSTGRES_DB=quantiv_options
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/create-postgres-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../database/create-serving-schema.sql:/docker-entrypoint-initdb.d/02-serving-schema.sql
      - ../database/create-em-schema.sql:/docker-entrypoint-initdb.d/03-em-schema.sql
    restart: unless-stopped

  # Redis Cache
  redis:
    networks:
      - quantiv-net
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # ML Pipeline Batch Job
  ml-pipeline:
    networks:
      - quantiv-net
    build:
      context: ../../apps/ml
      dockerfile: Dockerfile
    env_file:
      - ../../config/.env.local
    environment:
      - DATABASE_URL=
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=quantiv_user
      - POSTGRES_PASSWORD=quantiv_secure_2024
      - POSTGRES_DB=quantiv_options
    depends_on:
      - postgres
    volumes:
      - ../../data:/app/data
      - ../../models:/app/models
    profiles:
      - batch  # Only run when explicitly requested
    restart: "no"

  # Next.js Frontend (development)
  frontend:
    networks:
      - quantiv-net
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    env_file:
      - ../../config/.env.local
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ../../apps/frontend:/app
      - ../../lib:/app/lib
      - /app/node_modules
      - /app/.next
    profiles:
      - dev
    restart: unless-stopped

  # Serving Indexes Runner (one-shot)
  db-indexes:
    networks:
      - quantiv-net
    build:
      context: ../database
      dockerfile: Dockerfile.indexer
    env_file:
      - ../../config/.env.local
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=quantiv_user
      - POSTGRES_PASSWORD=quantiv_secure_2024
      - POSTGRES_DB=quantiv_options
    depends_on:
      - postgres
    profiles:
      - ops
    restart: "no"

volumes:
  postgres_data:
  redis_data:

networks:
  quantiv-net:
    driver: bridge
