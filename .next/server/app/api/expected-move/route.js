"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6005:e=>{e.exports=require("node:crypto")},6830:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>y,patchFetch:()=>R,requestAsyncStorage:()=>v,routeModule:()=>u,serverHooks:()=>x,staticGenerationAsyncStorage:()=>g});var i={};a.r(i),a.d(i,{GET:()=>d,OPTIONS:()=>h});var s=a(9303),o=a(8716),r=a(670),n=a(7070),l=a(5074),p=a(7107),c=a(6120);class m{static async getChain(e,t){await new Promise(e=>setTimeout(e,80));let a=150+50*Math.random(),i=t||"2024-02-16",s=Math.max(1,Math.ceil((new Date(i).getTime()-Date.now())/864e5)),o=[],r=5*Math.round(a/5);for(let e=-10;e<=10;e++)o.push(r+5*e);let n=o.map(e=>{let t=Math.max(0,a-e)+(3*Math.random()+.5),i=Math.max(.01,.04*t);return{strike:e,mid:t,bid:Math.max(.01,t-i/2),ask:t+i/2,iv:.2+.3*Math.random(),volume:Math.floor(1e3*Math.random()),openInterest:Math.floor(5e3*Math.random())}}),l=o.map(e=>{let t=Math.max(0,e-a)+(3*Math.random()+.5),i=Math.max(.01,.04*t);return{strike:e,mid:t,bid:Math.max(.01,t-i/2),ask:t+i/2,iv:.2+.3*Math.random(),volume:Math.floor(1e3*Math.random()),openInterest:Math.floor(5e3*Math.random())}});return{symbol:e.toUpperCase(),spot:a,expiryDate:i,daysToExpiry:s,strikes:o,calls:n,puts:l,timestamp:new Date().toISOString()}}}async function d(e){let t=Date.now();try{let a=new URL(e.url),i={symbol:a.searchParams.get("symbol"),expiry:a.searchParams.get("expiry")},s=(0,l.Gl)(l.Qp,i);if(!s.success)return n.NextResponse.json((0,l.ql)(void 0,"Invalid request parameters",s.details?.join(", ")),{status:400});let{symbol:o,expiry:r}=s.data,d=p.ZU.expectedMove(o,r||"default"),h=p.Oj.expectedMove.get(d),u="l1";if(!h){let e=c.R8.expectedMoveSnapshot(o,r||"default");if(u=(h=await c.ES.getJson(e))?"l2":"miss",h)p.Oj.expectedMove.set(d,h,9e4);else{let e=p.ZU.optionsChain(o,r||"default"),t=p.Oj.optionsChain.get(e);if(!t){let a=c.R8.optionsChain(o,r||"default");(t=await c.ES.getJson(a))?p.Oj.optionsChain.set(e,t,6e4):(t=await m.getChain(o,r),p.Oj.optionsChain.set(e,t,6e4),await c.ES.setJson(a,t,300))}let a=calculateExpectedMove(t),i=function(e,t){let a=e.calls.find(e=>e.strike===t.strike),i=e.puts.find(e=>e.strike===t.strike),s="medium",o="medium";if(a&&i){let e=((a.ask-a.bid)/a.mid+(i.ask-i.bid)/i.mid)/2;e<.1?s="high":e>.25&&(s="low");let t=(a.volume||0)+(i.volume||0);t>100?"medium"===s&&(s="high"):t<10&&("high"===s&&(s="medium"),"medium"===s&&(s="low"))}if(a?.iv&&i?.iv){let e=Math.abs(a.iv-i.iv);e<.02?o="high":e>.05&&(o="low")}else a?.iv||i?.iv||(o="low");return t.T<.02&&(s="high"===s?"medium":"low",o="high"===o?"medium":"low"),{straddle:s,iv:o}}(t,a.atm);h={...a,confidence:i,timestamp:new Date().toISOString(),symbol:t.symbol},p.Oj.expectedMove.set(d,h,9e4),await c.O4.cacheExpectedMove(o,r||"default",h,180),h.straddle.pct>5&&await c.O4.addTopMover(o,h.straddle.pct),u="miss"}}let v=p.ZU.ivSeries(o,252),g=p.Oj.ivSeries.get(v);if(!g){let e=generateMockIVData(252),t=h.atm?.iv||.25;g=function(e,t){if(0===e.length)throw Error("No historical IV data provided");let a=e.map(e=>e.iv).filter(e=>e>0&&e<10);if(0===a.length)throw Error("No valid IV data points found");let i=[...a].sort((e,t)=>e-t),s=i[0],o=i[i.length-1],r=a.filter(e=>e<=t).length/a.length*100,n=a.reduce((e,t)=>e+t,0)/a.length,l=i.length%2==1?i[Math.floor(i.length/2)]:(i[i.length/2-1]+i[i.length/2])/2,p=a.reduce((e,t)=>e+Math.pow(t-n,2),0)/a.length;return{rank:Math.max(0,Math.min(1,o===s?.5:(t-s)/(o-s))),percentile:Math.max(0,Math.min(100,r)),current:t,min:s,max:o,mean:n,median:l,stdDev:Math.sqrt(p),daysInSample:a.length}}(e,t),p.Oj.ivSeries.set(v,g,18e5),await c.ES.setJson(c.R8.ivSeries(o),g,1800)}let x=(0,l.ql)({em:h,ivRank:g}),y=Date.now()-t,R=new Headers({"Content-Type":"application/json","Cache-Control":"public, s-maxage=90, stale-while-revalidate=300","X-Cache-Hit":u,"X-Processing-Time":`${y}ms`,"X-Symbol":o,"X-Expiry":h.atm?.expiry||"default"});return n.NextResponse.json(x,{headers:R})}catch(t){console.error("[API] /api/expected-move error:",t);let e=(0,l.ql)(void 0,"Internal server error",t instanceof Error?t.message:"Unknown error","Please check symbol format and try again");return n.NextResponse.json(e,{status:500})}}async function h(){return new n.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let u=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/expected-move/route",pathname:"/api/expected-move",filename:"route",bundlePath:"app/api/expected-move/route"},resolvedPagePath:"/Users/ken/Desktop/quantiv/app/api/expected-move/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:v,staticGenerationAsyncStorage:g,serverHooks:x}=u,y="/api/expected-move/route";function R(){return(0,r.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:g})}},7107:(e,t,a)=>{a.d(t,{MJ:()=>r,Oj:()=>o,ZU:()=>n});var i=a(138);class s{constructor(e,t={}){this.hits=0,this.misses=0,this.name=e,this.cache=new i.z({max:t.maxSize||100,ttl:t.ttlMs||6e4,updateAgeOnGet:t.updateAgeOnGet??!0,dispose:(e,t)=>{console.debug(`[${this.name}] Evicted cache entry: ${t}`)}})}get(e){let t=this.cache.get(e);return t?(this.hits++,t.data):(this.misses++,null)}set(e,t,a){let i={data:t,timestamp:Date.now(),key:e};a?this.cache.set(e,i,{ttl:a}):this.cache.set(e,i)}has(e){return this.cache.has(e)}delete(e){return this.cache.delete(e)}clear(){this.cache.clear(),this.hits=0,this.misses=0}getStats(){let e=this.hits+this.misses;return{name:this.name,size:this.cache.size,maxSize:this.cache.max,hits:this.hits,misses:this.misses,hitRate:e>0?this.hits/e*100:0,calculatedSize:this.cache.calculatedSize||0}}async getOrSet(e,t,a){let i=this.get(e);if(null!==i)return i;try{let i=await t();return this.set(e,i,a),i}catch(t){throw console.error(`[${this.name}] Error fetching data for key ${e}:`,t),t}}peek(e){let t=this.cache.peek(e);return t?t.data:null}keys(){return Array.from(this.cache.keys())}getInfo(){let e=[],t=Date.now();for(let[a,i]of Array.from(this.cache.entries()))e.push({key:a,timestamp:i.timestamp,age:t-i.timestamp});return{name:this.name,entries:e,stats:this.getStats()}}}let o={optionsChain:new s("options-chain",{maxSize:200,ttlMs:6e4,updateAgeOnGet:!0}),expectedMove:new s("expected-move",{maxSize:150,ttlMs:9e4,updateAgeOnGet:!0}),earnings:new s("earnings",{maxSize:100,ttlMs:3e5,updateAgeOnGet:!0}),priceHistory:new s("price-history",{maxSize:50,ttlMs:6e5,updateAgeOnGet:!1}),ivSeries:new s("iv-series",{maxSize:100,ttlMs:18e5,updateAgeOnGet:!1})};function r(){return{optionsChain:o.optionsChain.getStats(),expectedMove:o.expectedMove.getStats(),earnings:o.earnings.getStats(),priceHistory:o.priceHistory.getStats(),ivSeries:o.ivSeries.getStats()}}let n={optionsChain:(e,t)=>`${e.toUpperCase()}:${t}`,expectedMove:(e,t)=>`${e.toUpperCase()}:${t}`,earnings:e=>e.toUpperCase(),priceHistory:(e,t)=>`${e.toUpperCase()}:${t}d`,ivSeries:(e,t)=>`${e.toUpperCase()}:${t}d`}},6120:(e,t,a)=>{a.d(t,{ES:()=>o,O4:()=>r,R8:()=>s,pb:()=>n});let i=new(a(6859)).s({url:process.env.REDIS_URL,token:process.env.REDIS_TOKEN}),s={expectedMoveSnapshot:(e,t)=>`em:snap:${e.toUpperCase()}:${t}`,topMovers:e=>`em:top:${e}`,ivSeries:e=>`iv:series:${e.toUpperCase()}`,dailyVisits:e=>`d:visits:${e}`,optionsChain:(e,t)=>`chain:${e.toUpperCase()}:${t}`,earnings:e=>`earnings:${e.toUpperCase()}`,priceHistory:e=>`prices:${e.toUpperCase()}`};class o{static async setJson(e,t,a=120){try{await i.setex(e,a,JSON.stringify(t))}catch(t){console.error(`Redis setJson error for key ${e}:`,t)}}static async getJson(e){try{let t=await i.get(e);return t?JSON.parse(t):null}catch(t){return console.error(`Redis getJson error for key ${e}:`,t),null}}static async increment(e,t){try{let a=await i.incr(e);return t&&1===a&&await i.expire(e,t),a}catch(t){return console.error(`Redis increment error for key ${e}:`,t),0}}static async addToSortedSet(e,t,a,s){try{await i.zadd(e,{score:t,member:a}),s&&await i.expire(e,s)}catch(t){console.error(`Redis zadd error for key ${e}:`,t)}}static async getTopFromSortedSet(e,t=10){try{let a=await i.zrange(e,0,t-1,{rev:!0,withScores:!0}),s=[];for(let e=0;e<a.length;e+=2)s.push({member:a[e],score:a[e+1]});return s}catch(t){return console.error(`Redis zrange error for key ${e}:`,t),[]}}static async delete(e){try{await i.del(e)}catch(t){console.error(`Redis delete error for key ${e}:`,t)}}static async exists(e){try{let t=await i.exists(e);return 1===t}catch(t){return console.error(`Redis exists error for key ${e}:`,t),!1}}static async getTTL(e){try{return await i.ttl(e)}catch(t){return console.error(`Redis TTL error for key ${e}:`,t),-1}}}class r{static async cacheExpectedMove(e,t,a,i=120){let r=s.expectedMoveSnapshot(e,t),n={...a,timestamp:new Date().toISOString(),symbol:e.toUpperCase(),expiry:t};await o.setJson(r,n,i)}static async getExpectedMove(e,t){let a=s.expectedMoveSnapshot(e,t);return await o.getJson(a)}static async incrementVisitorCount(){let e=new Date().toISOString().split("T")[0].replace(/-/g,""),t=s.dailyVisits(e);return await o.increment(t,172800)}static async getVisitorCount(e){let t=e||new Date().toISOString().split("T")[0].replace(/-/g,""),a=s.dailyVisits(t);try{let e=await i.get(a);return e?parseInt(e,10):0}catch(e){return console.error(`Error getting visitor count for ${t}:`,e),0}}static async cacheIVSeries(e,t,a=86400){let i=s.ivSeries(e);await o.setJson(i,t,a)}static async getIVSeries(e){let t=s.ivSeries(e);return await o.getJson(t)}static async addTopMover(e,t,a){let i=a||new Date().toISOString().split("T")[0].replace(/-/g,""),r=s.topMovers(i);await o.addToSortedSet(r,t,e.toUpperCase(),86400)}static async getTopMovers(e,t=10){let a=e||new Date().toISOString().split("T")[0].replace(/-/g,""),i=s.topMovers(a);return(await o.getTopFromSortedSet(i,t)).map(e=>({symbol:e.member,expectedMovePct:e.score}))}}async function n(){try{let e=Date.now();await i.ping();let t=Date.now()-e;return{connected:!0,latency:t}}catch(e){return{connected:!1,error:e instanceof Error?e.message:"Unknown error"}}}},5074:(e,t,a)=>{a.d(t,{Gl:()=>x,Qp:()=>v,ql:()=>y,rJ:()=>u,z1:()=>g});var i=a(1585),s=a(6033);let o=i.Z_().min(1,"Symbol is required").max(10,"Symbol too long").regex(/^[A-Za-z0-9.-]+$/,"Invalid symbol format").transform(e=>e.toUpperCase()),r=i.Z_().regex(/^\d{4}-\d{2}-\d{2}$/,"Expiry must be in YYYY-MM-DD format").refine(e=>new Date(e)>new Date,"Expiry must be in the future"),n=i.Z_().regex(/^\d{4}-\d{2}-\d{2}$/,"Date must be in YYYY-MM-DD format"),l=i.Ry({strike:i.Rx().positive("Strike must be positive"),mid:i.Rx().nonnegative("Mid price cannot be negative"),bid:i.Rx().nonnegative("Bid price cannot be negative"),ask:i.Rx().nonnegative("Ask price cannot be negative"),iv:i.Rx().positive("IV must be positive").optional(),delta:i.Rx().optional(),gamma:i.Rx().optional(),theta:i.Rx().optional(),vega:i.Rx().optional(),rho:i.Rx().optional(),volume:i.Rx().nonnegative().optional(),openInterest:i.Rx().nonnegative().optional(),lastPrice:i.Rx().nonnegative().optional(),change:i.Rx().optional(),changePct:i.Rx().optional()});i.Ry({symbol:o,spot:i.Rx().positive("Spot price must be positive"),expiryDate:r,daysToExpiry:i.Rx().positive("Days to expiry must be positive"),strikes:i.IX(i.Rx().positive()).min(1,"At least one strike required"),calls:i.IX(l).min(1,"At least one call required"),puts:i.IX(l).min(1,"At least one put required"),timestamp:i.Z_().datetime().optional(),source:i.Z_().optional()});let p=i.Ry({straddle:i.Ry({abs:i.Rx().nonnegative("Straddle move cannot be negative"),pct:i.Rx().nonnegative("Straddle percentage cannot be negative")}),iv:i.Ry({abs:i.Rx().nonnegative("IV move cannot be negative"),pct:i.Rx().nonnegative("IV percentage cannot be negative")}),bands:i.Ry({oneSigma:i.Ry({upper:i.Rx(),lower:i.Rx()}),twoSigma:i.Ry({upper:i.Rx(),lower:i.Rx()})}),confidence:i.Ry({straddle:i.Km(["high","medium","low"]),iv:i.Km(["high","medium","low"])})}),c=i.Ry({rank:i.Rx().min(0).max(1,"IV rank must be between 0 and 1"),percentile:i.Rx().min(0).max(100,"Percentile must be between 0 and 100"),current:i.Rx().positive("Current IV must be positive"),min:i.Rx().positive("Min IV must be positive"),max:i.Rx().positive("Max IV must be positive"),mean:i.Rx().positive("Mean IV must be positive"),median:i.Rx().positive("Median IV must be positive"),stdDev:i.Rx().nonnegative("Standard deviation cannot be negative"),daysInSample:i.Rx().positive("Days in sample must be positive")}),m=i.Ry({date:n,confidence:i.Km(["confirmed","estimated"]),timing:i.Km(["bmo","amc","unknown"]).optional(),estimate:i.Ry({eps:i.Rx().optional(),revenue:i.Rx().optional()}).optional()}),d=i.Ry({date:n,realizedMovePct:i.Rx(),priceChange:i.Rx(),priceBefore:i.Rx().positive(),priceAfter:i.Rx().positive(),volume:i.Rx().nonnegative().optional()}),h=i.Ry({symbol:o,next:m.optional(),last:i.IX(d).max(8,"Maximum 8 historical earnings"),timestamp:i.Z_().datetime().optional()}),u=i.Ry({symbol:o,expiry:r.optional()}),v=i.Ry({symbol:o,expiry:r.optional()}),g=i.Ry({symbol:o});function x(e,t){try{let a=e.parse(t);return{success:!0,data:a}}catch(e){if(e instanceof s.jm)return{success:!1,error:"Validation failed",details:e.errors.map(e=>`${e.path.join(".")}: ${e.message}`)};return{success:!1,error:"Unknown validation error",details:[e instanceof Error?e.message:"Unknown error"]}}}function y(e,t,a,i){return{success:!t,...e&&{data:e},...t&&{error:t},...a&&{detail:a},...i&&{hint:i},timestamp:new Date().toISOString()}}i.Ry({date:n.optional(),limit:i.Rx().min(1).max(50).default(10)}),i.Ry({success:i.O7(),data:i.Ry({spot:i.Rx().positive(),expiryUsed:r,atm:i.Ry({strike:i.Rx().positive(),callMid:i.Rx().nonnegative(),putMid:i.Rx().nonnegative(),iv:i.Rx().positive(),T:i.Rx().positive()}),rows:i.IX(i.Ry({strike:i.Rx().positive(),call:l,put:l}))}).optional(),error:i.Z_().optional(),timestamp:i.Z_().datetime()}),i.Ry({success:i.O7(),data:i.Ry({em:p,ivRank:c}).optional(),error:i.Z_().optional(),timestamp:i.Z_().datetime()}),i.Ry({success:i.O7(),data:h.optional(),error:i.Z_().optional(),timestamp:i.Z_().datetime()}),i.Ry({success:i.O7(),data:i.Ry({count:i.Rx().nonnegative()}).optional(),error:i.Z_().optional(),timestamp:i.Z_().datetime()}),i.Ry({success:i.O7(),data:i.IX(i.Ry({symbol:o,expectedMovePct:i.Rx().nonnegative(),spot:i.Rx().positive().optional(),volume:i.Rx().nonnegative().optional()})).optional(),error:i.Z_().optional(),timestamp:i.Z_().datetime()}),i.Ry({success:i.i0(!1),error:i.Z_(),detail:i.Z_().optional(),hint:i.Z_().optional(),timestamp:i.Z_().datetime()}),i.Ry({status:i.Km(["healthy","degraded","unhealthy"]),timestamp:i.Z_().datetime(),services:i.Ry({redis:i.Ry({connected:i.O7(),latency:i.Rx().optional(),error:i.Z_().optional()}),cache:i.Ry({l1Stats:i.IM(i.Ry({size:i.Rx(),hitRate:i.Rx()}))})}),version:i.Z_().optional()})}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),i=t.X(0,[276,982,585,138],()=>a(6830));module.exports=i})();