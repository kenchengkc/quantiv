"use strict";(()=>{var e={};e.id=274,e.ids=[274],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6005:e=>{e.exports=require("node:crypto")},3029:(e,t,i)=>{i.r(t),i.d(t,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>y,routeModule:()=>R,serverHooks:()=>x,staticGenerationAsyncStorage:()=>v});var o={};i.r(o),i.d(o,{GET:()=>m,OPTIONS:()=>u,POST:()=>d});var r=i(9303),n=i(8716),a=i(670),s=i(7070),p=i(5074),c=i(6120);class l{static{this.requests=new Map}static{this.WINDOW_MS=6e4}static{this.MAX_REQUESTS=10}static isAllowed(e){let t=Date.now(),i=this.requests.get(e);return!i||t>i.resetTime?(this.requests.set(e,{count:1,resetTime:t+this.WINDOW_MS}),!0):!(i.count>=this.MAX_REQUESTS)&&(i.count++,!0)}static getRemainingRequests(e){let t=this.requests.get(e);return!t||Date.now()>t.resetTime?this.MAX_REQUESTS:Math.max(0,this.MAX_REQUESTS-t.count)}}async function m(e){let t=Date.now();try{let i=e.headers.get("x-forwarded-for"),o=i?i.split(",")[0].trim():e.headers.get("x-real-ip")||"unknown";if(!l.isAllowed(o)){let e=l.getRemainingRequests(o);return s.NextResponse.json((0,p.ql)(void 0,"Rate limit exceeded","Too many requests from this IP address","Please wait before making more requests"),{status:429,headers:{"X-RateLimit-Remaining":e.toString(),"X-RateLimit-Reset":"60","Retry-After":"60"}})}let r=await c.O4.incrementVisitorCount(),n=(0,p.ql)({count:r}),a=Date.now()-t,m=new Headers({"Content-Type":"application/json","Cache-Control":"no-cache, no-store, must-revalidate","X-Processing-Time":`${a}ms`,"X-Visitor-Count":r.toString(),"X-Client-IP":o,"X-RateLimit-Remaining":l.getRemainingRequests(o).toString()});return s.NextResponse.json(n,{headers:m})}catch(t){console.error("[API] /api/hit error:",t);let e=(0,p.ql)(void 0,"Internal server error",t instanceof Error?t.message:"Unknown error","Visitor count may not have been updated");return s.NextResponse.json(e,{status:500})}}async function d(e){return m(e)}async function u(){return new s.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let R=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/hit/route",pathname:"/api/hit",filename:"route",bundlePath:"app/api/hit/route"},resolvedPagePath:"/Users/ken/Desktop/quantiv/app/api/hit/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:y,staticGenerationAsyncStorage:v,serverHooks:x}=R,g="/api/hit/route";function h(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:v})}},6120:(e,t,i)=>{i.d(t,{ES:()=>n,O4:()=>a,R8:()=>r,pb:()=>s});let o=new(i(6859)).s({url:process.env.REDIS_URL,token:process.env.REDIS_TOKEN}),r={expectedMoveSnapshot:(e,t)=>`em:snap:${e.toUpperCase()}:${t}`,topMovers:e=>`em:top:${e}`,ivSeries:e=>`iv:series:${e.toUpperCase()}`,dailyVisits:e=>`d:visits:${e}`,optionsChain:(e,t)=>`chain:${e.toUpperCase()}:${t}`,earnings:e=>`earnings:${e.toUpperCase()}`,priceHistory:e=>`prices:${e.toUpperCase()}`};class n{static async setJson(e,t,i=120){try{await o.setex(e,i,JSON.stringify(t))}catch(t){console.error(`Redis setJson error for key ${e}:`,t)}}static async getJson(e){try{let t=await o.get(e);return t?JSON.parse(t):null}catch(t){return console.error(`Redis getJson error for key ${e}:`,t),null}}static async increment(e,t){try{let i=await o.incr(e);return t&&1===i&&await o.expire(e,t),i}catch(t){return console.error(`Redis increment error for key ${e}:`,t),0}}static async addToSortedSet(e,t,i,r){try{await o.zadd(e,{score:t,member:i}),r&&await o.expire(e,r)}catch(t){console.error(`Redis zadd error for key ${e}:`,t)}}static async getTopFromSortedSet(e,t=10){try{let i=await o.zrange(e,0,t-1,{rev:!0,withScores:!0}),r=[];for(let e=0;e<i.length;e+=2)r.push({member:i[e],score:i[e+1]});return r}catch(t){return console.error(`Redis zrange error for key ${e}:`,t),[]}}static async delete(e){try{await o.del(e)}catch(t){console.error(`Redis delete error for key ${e}:`,t)}}static async exists(e){try{let t=await o.exists(e);return 1===t}catch(t){return console.error(`Redis exists error for key ${e}:`,t),!1}}static async getTTL(e){try{return await o.ttl(e)}catch(t){return console.error(`Redis TTL error for key ${e}:`,t),-1}}}class a{static async cacheExpectedMove(e,t,i,o=120){let a=r.expectedMoveSnapshot(e,t),s={...i,timestamp:new Date().toISOString(),symbol:e.toUpperCase(),expiry:t};await n.setJson(a,s,o)}static async getExpectedMove(e,t){let i=r.expectedMoveSnapshot(e,t);return await n.getJson(i)}static async incrementVisitorCount(){let e=new Date().toISOString().split("T")[0].replace(/-/g,""),t=r.dailyVisits(e);return await n.increment(t,172800)}static async getVisitorCount(e){let t=e||new Date().toISOString().split("T")[0].replace(/-/g,""),i=r.dailyVisits(t);try{let e=await o.get(i);return e?parseInt(e,10):0}catch(e){return console.error(`Error getting visitor count for ${t}:`,e),0}}static async cacheIVSeries(e,t,i=86400){let o=r.ivSeries(e);await n.setJson(o,t,i)}static async getIVSeries(e){let t=r.ivSeries(e);return await n.getJson(t)}static async addTopMover(e,t,i){let o=i||new Date().toISOString().split("T")[0].replace(/-/g,""),a=r.topMovers(o);await n.addToSortedSet(a,t,e.toUpperCase(),86400)}static async getTopMovers(e,t=10){let i=e||new Date().toISOString().split("T")[0].replace(/-/g,""),o=r.topMovers(i);return(await n.getTopFromSortedSet(o,t)).map(e=>({symbol:e.member,expectedMovePct:e.score}))}}async function s(){try{let e=Date.now();await o.ping();let t=Date.now()-e;return{connected:!0,latency:t}}catch(e){return{connected:!1,error:e instanceof Error?e.message:"Unknown error"}}}},5074:(e,t,i)=>{i.d(t,{Gl:()=>x,Qp:()=>y,ql:()=>g,rJ:()=>R,z1:()=>v});var o=i(1585),r=i(6033);let n=o.Z_().min(1,"Symbol is required").max(10,"Symbol too long").regex(/^[A-Za-z0-9.-]+$/,"Invalid symbol format").transform(e=>e.toUpperCase()),a=o.Z_().regex(/^\d{4}-\d{2}-\d{2}$/,"Expiry must be in YYYY-MM-DD format").refine(e=>new Date(e)>new Date,"Expiry must be in the future"),s=o.Z_().regex(/^\d{4}-\d{2}-\d{2}$/,"Date must be in YYYY-MM-DD format"),p=o.Ry({strike:o.Rx().positive("Strike must be positive"),mid:o.Rx().nonnegative("Mid price cannot be negative"),bid:o.Rx().nonnegative("Bid price cannot be negative"),ask:o.Rx().nonnegative("Ask price cannot be negative"),iv:o.Rx().positive("IV must be positive").optional(),delta:o.Rx().optional(),gamma:o.Rx().optional(),theta:o.Rx().optional(),vega:o.Rx().optional(),rho:o.Rx().optional(),volume:o.Rx().nonnegative().optional(),openInterest:o.Rx().nonnegative().optional(),lastPrice:o.Rx().nonnegative().optional(),change:o.Rx().optional(),changePct:o.Rx().optional()});o.Ry({symbol:n,spot:o.Rx().positive("Spot price must be positive"),expiryDate:a,daysToExpiry:o.Rx().positive("Days to expiry must be positive"),strikes:o.IX(o.Rx().positive()).min(1,"At least one strike required"),calls:o.IX(p).min(1,"At least one call required"),puts:o.IX(p).min(1,"At least one put required"),timestamp:o.Z_().datetime().optional(),source:o.Z_().optional()});let c=o.Ry({straddle:o.Ry({abs:o.Rx().nonnegative("Straddle move cannot be negative"),pct:o.Rx().nonnegative("Straddle percentage cannot be negative")}),iv:o.Ry({abs:o.Rx().nonnegative("IV move cannot be negative"),pct:o.Rx().nonnegative("IV percentage cannot be negative")}),bands:o.Ry({oneSigma:o.Ry({upper:o.Rx(),lower:o.Rx()}),twoSigma:o.Ry({upper:o.Rx(),lower:o.Rx()})}),confidence:o.Ry({straddle:o.Km(["high","medium","low"]),iv:o.Km(["high","medium","low"])})}),l=o.Ry({rank:o.Rx().min(0).max(1,"IV rank must be between 0 and 1"),percentile:o.Rx().min(0).max(100,"Percentile must be between 0 and 100"),current:o.Rx().positive("Current IV must be positive"),min:o.Rx().positive("Min IV must be positive"),max:o.Rx().positive("Max IV must be positive"),mean:o.Rx().positive("Mean IV must be positive"),median:o.Rx().positive("Median IV must be positive"),stdDev:o.Rx().nonnegative("Standard deviation cannot be negative"),daysInSample:o.Rx().positive("Days in sample must be positive")}),m=o.Ry({date:s,confidence:o.Km(["confirmed","estimated"]),timing:o.Km(["bmo","amc","unknown"]).optional(),estimate:o.Ry({eps:o.Rx().optional(),revenue:o.Rx().optional()}).optional()}),d=o.Ry({date:s,realizedMovePct:o.Rx(),priceChange:o.Rx(),priceBefore:o.Rx().positive(),priceAfter:o.Rx().positive(),volume:o.Rx().nonnegative().optional()}),u=o.Ry({symbol:n,next:m.optional(),last:o.IX(d).max(8,"Maximum 8 historical earnings"),timestamp:o.Z_().datetime().optional()}),R=o.Ry({symbol:n,expiry:a.optional()}),y=o.Ry({symbol:n,expiry:a.optional()}),v=o.Ry({symbol:n});function x(e,t){try{let i=e.parse(t);return{success:!0,data:i}}catch(e){if(e instanceof r.jm)return{success:!1,error:"Validation failed",details:e.errors.map(e=>`${e.path.join(".")}: ${e.message}`)};return{success:!1,error:"Unknown validation error",details:[e instanceof Error?e.message:"Unknown error"]}}}function g(e,t,i,o){return{success:!t,...e&&{data:e},...t&&{error:t},...i&&{detail:i},...o&&{hint:o},timestamp:new Date().toISOString()}}o.Ry({date:s.optional(),limit:o.Rx().min(1).max(50).default(10)}),o.Ry({success:o.O7(),data:o.Ry({spot:o.Rx().positive(),expiryUsed:a,atm:o.Ry({strike:o.Rx().positive(),callMid:o.Rx().nonnegative(),putMid:o.Rx().nonnegative(),iv:o.Rx().positive(),T:o.Rx().positive()}),rows:o.IX(o.Ry({strike:o.Rx().positive(),call:p,put:p}))}).optional(),error:o.Z_().optional(),timestamp:o.Z_().datetime()}),o.Ry({success:o.O7(),data:o.Ry({em:c,ivRank:l}).optional(),error:o.Z_().optional(),timestamp:o.Z_().datetime()}),o.Ry({success:o.O7(),data:u.optional(),error:o.Z_().optional(),timestamp:o.Z_().datetime()}),o.Ry({success:o.O7(),data:o.Ry({count:o.Rx().nonnegative()}).optional(),error:o.Z_().optional(),timestamp:o.Z_().datetime()}),o.Ry({success:o.O7(),data:o.IX(o.Ry({symbol:n,expectedMovePct:o.Rx().nonnegative(),spot:o.Rx().positive().optional(),volume:o.Rx().nonnegative().optional()})).optional(),error:o.Z_().optional(),timestamp:o.Z_().datetime()}),o.Ry({success:o.i0(!1),error:o.Z_(),detail:o.Z_().optional(),hint:o.Z_().optional(),timestamp:o.Z_().datetime()}),o.Ry({status:o.Km(["healthy","degraded","unhealthy"]),timestamp:o.Z_().datetime(),services:o.Ry({redis:o.Ry({connected:o.O7(),latency:o.Rx().optional(),error:o.Z_().optional()}),cache:o.Ry({l1Stats:o.IM(o.Ry({size:o.Rx(),hitRate:o.Rx()}))})}),version:o.Z_().optional()})}};var t=require("../../../webpack-runtime.js");t.C(e);var i=e=>t(t.s=e),o=t.X(0,[276,982,585],()=>i(3029));module.exports=o})();